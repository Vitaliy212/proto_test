// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_model_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_model_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_model_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_model_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_model_2eproto;
class MyModel;
class MyModelDefaultTypeInternal;
extern MyModelDefaultTypeInternal _MyModel_default_instance_;
class MyModel_Response;
class MyModel_ResponseDefaultTypeInternal;
extern MyModel_ResponseDefaultTypeInternal _MyModel_Response_default_instance_;
class MyModel_Response_Body;
class MyModel_Response_BodyDefaultTypeInternal;
extern MyModel_Response_BodyDefaultTypeInternal _MyModel_Response_Body_default_instance_;
class MyModel_Response_Body_Clothing;
class MyModel_Response_Body_ClothingDefaultTypeInternal;
extern MyModel_Response_Body_ClothingDefaultTypeInternal _MyModel_Response_Body_Clothing_default_instance_;
class MyModel_Response_Body_Clothing_Fabric;
class MyModel_Response_Body_Clothing_FabricDefaultTypeInternal;
extern MyModel_Response_Body_Clothing_FabricDefaultTypeInternal _MyModel_Response_Body_Clothing_Fabric_default_instance_;
class MyModel_Response_Body_Head;
class MyModel_Response_Body_HeadDefaultTypeInternal;
extern MyModel_Response_Body_HeadDefaultTypeInternal _MyModel_Response_Body_Head_default_instance_;
class MyModel_Response_Body_Head_Environment;
class MyModel_Response_Body_Head_EnvironmentDefaultTypeInternal;
extern MyModel_Response_Body_Head_EnvironmentDefaultTypeInternal _MyModel_Response_Body_Head_Environment_default_instance_;
class MyModel_Response_Body_Torso;
class MyModel_Response_Body_TorsoDefaultTypeInternal;
extern MyModel_Response_Body_TorsoDefaultTypeInternal _MyModel_Response_Body_Torso_default_instance_;
class MyModel_Response_Body_Torso_Environment;
class MyModel_Response_Body_Torso_EnvironmentDefaultTypeInternal;
extern MyModel_Response_Body_Torso_EnvironmentDefaultTypeInternal _MyModel_Response_Body_Torso_Environment_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::MyModel* Arena::CreateMaybeMessage<::MyModel>(Arena*);
template<> ::MyModel_Response* Arena::CreateMaybeMessage<::MyModel_Response>(Arena*);
template<> ::MyModel_Response_Body* Arena::CreateMaybeMessage<::MyModel_Response_Body>(Arena*);
template<> ::MyModel_Response_Body_Clothing* Arena::CreateMaybeMessage<::MyModel_Response_Body_Clothing>(Arena*);
template<> ::MyModel_Response_Body_Clothing_Fabric* Arena::CreateMaybeMessage<::MyModel_Response_Body_Clothing_Fabric>(Arena*);
template<> ::MyModel_Response_Body_Head* Arena::CreateMaybeMessage<::MyModel_Response_Body_Head>(Arena*);
template<> ::MyModel_Response_Body_Head_Environment* Arena::CreateMaybeMessage<::MyModel_Response_Body_Head_Environment>(Arena*);
template<> ::MyModel_Response_Body_Torso* Arena::CreateMaybeMessage<::MyModel_Response_Body_Torso>(Arena*);
template<> ::MyModel_Response_Body_Torso_Environment* Arena::CreateMaybeMessage<::MyModel_Response_Body_Torso_Environment>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class MyModel_Response_Body_Head_Environment PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MyModel.Response.Body.Head.Environment) */ {
 public:
  inline MyModel_Response_Body_Head_Environment() : MyModel_Response_Body_Head_Environment(nullptr) {}
  virtual ~MyModel_Response_Body_Head_Environment();

  MyModel_Response_Body_Head_Environment(const MyModel_Response_Body_Head_Environment& from);
  MyModel_Response_Body_Head_Environment(MyModel_Response_Body_Head_Environment&& from) noexcept
    : MyModel_Response_Body_Head_Environment() {
    *this = ::std::move(from);
  }

  inline MyModel_Response_Body_Head_Environment& operator=(const MyModel_Response_Body_Head_Environment& from) {
    CopyFrom(from);
    return *this;
  }
  inline MyModel_Response_Body_Head_Environment& operator=(MyModel_Response_Body_Head_Environment&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MyModel_Response_Body_Head_Environment& default_instance();

  static inline const MyModel_Response_Body_Head_Environment* internal_default_instance() {
    return reinterpret_cast<const MyModel_Response_Body_Head_Environment*>(
               &_MyModel_Response_Body_Head_Environment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MyModel_Response_Body_Head_Environment& a, MyModel_Response_Body_Head_Environment& b) {
    a.Swap(&b);
  }
  inline void Swap(MyModel_Response_Body_Head_Environment* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MyModel_Response_Body_Head_Environment* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MyModel_Response_Body_Head_Environment* New() const final {
    return CreateMaybeMessage<MyModel_Response_Body_Head_Environment>(nullptr);
  }

  MyModel_Response_Body_Head_Environment* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MyModel_Response_Body_Head_Environment>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MyModel_Response_Body_Head_Environment& from);
  void MergeFrom(const MyModel_Response_Body_Head_Environment& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MyModel_Response_Body_Head_Environment* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MyModel.Response.Body.Head.Environment";
  }
  protected:
  explicit MyModel_Response_Body_Head_Environment(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_model_2eproto);
    return ::descriptor_table_model_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHashFieldNumber = 2,
    kTypeEnvFieldNumber = 3,
    kIdFieldNumber = 1,
    kTemperatureInCelsiusFieldNumber = 4,
    kHumidityInPercentFieldNumber = 5,
    kWindVelocityFieldNumber = 6,
  };
  // string hash = 2;
  void clear_hash();
  const std::string& hash() const;
  void set_hash(const std::string& value);
  void set_hash(std::string&& value);
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  std::string* mutable_hash();
  std::string* release_hash();
  void set_allocated_hash(std::string* hash);
  private:
  const std::string& _internal_hash() const;
  void _internal_set_hash(const std::string& value);
  std::string* _internal_mutable_hash();
  public:

  // string typeEnv = 3;
  void clear_typeenv();
  const std::string& typeenv() const;
  void set_typeenv(const std::string& value);
  void set_typeenv(std::string&& value);
  void set_typeenv(const char* value);
  void set_typeenv(const char* value, size_t size);
  std::string* mutable_typeenv();
  std::string* release_typeenv();
  void set_allocated_typeenv(std::string* typeenv);
  private:
  const std::string& _internal_typeenv() const;
  void _internal_set_typeenv(const std::string& value);
  std::string* _internal_mutable_typeenv();
  public:

  // int32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 temperatureInCelsius = 4;
  void clear_temperatureincelsius();
  ::PROTOBUF_NAMESPACE_ID::int32 temperatureincelsius() const;
  void set_temperatureincelsius(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_temperatureincelsius() const;
  void _internal_set_temperatureincelsius(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 humidityInPercent = 5;
  void clear_humidityinpercent();
  ::PROTOBUF_NAMESPACE_ID::int32 humidityinpercent() const;
  void set_humidityinpercent(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_humidityinpercent() const;
  void _internal_set_humidityinpercent(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 windVelocity = 6;
  void clear_windvelocity();
  ::PROTOBUF_NAMESPACE_ID::int32 windvelocity() const;
  void set_windvelocity(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_windvelocity() const;
  void _internal_set_windvelocity(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MyModel.Response.Body.Head.Environment)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hash_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr typeenv_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 temperatureincelsius_;
  ::PROTOBUF_NAMESPACE_ID::int32 humidityinpercent_;
  ::PROTOBUF_NAMESPACE_ID::int32 windvelocity_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_2eproto;
};
// -------------------------------------------------------------------

class MyModel_Response_Body_Head PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MyModel.Response.Body.Head) */ {
 public:
  inline MyModel_Response_Body_Head() : MyModel_Response_Body_Head(nullptr) {}
  virtual ~MyModel_Response_Body_Head();

  MyModel_Response_Body_Head(const MyModel_Response_Body_Head& from);
  MyModel_Response_Body_Head(MyModel_Response_Body_Head&& from) noexcept
    : MyModel_Response_Body_Head() {
    *this = ::std::move(from);
  }

  inline MyModel_Response_Body_Head& operator=(const MyModel_Response_Body_Head& from) {
    CopyFrom(from);
    return *this;
  }
  inline MyModel_Response_Body_Head& operator=(MyModel_Response_Body_Head&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MyModel_Response_Body_Head& default_instance();

  static inline const MyModel_Response_Body_Head* internal_default_instance() {
    return reinterpret_cast<const MyModel_Response_Body_Head*>(
               &_MyModel_Response_Body_Head_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MyModel_Response_Body_Head& a, MyModel_Response_Body_Head& b) {
    a.Swap(&b);
  }
  inline void Swap(MyModel_Response_Body_Head* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MyModel_Response_Body_Head* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MyModel_Response_Body_Head* New() const final {
    return CreateMaybeMessage<MyModel_Response_Body_Head>(nullptr);
  }

  MyModel_Response_Body_Head* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MyModel_Response_Body_Head>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MyModel_Response_Body_Head& from);
  void MergeFrom(const MyModel_Response_Body_Head& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MyModel_Response_Body_Head* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MyModel.Response.Body.Head";
  }
  protected:
  explicit MyModel_Response_Body_Head(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_model_2eproto);
    return ::descriptor_table_model_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef MyModel_Response_Body_Head_Environment Environment;

  // accessors -------------------------------------------------------

  enum : int {
    kEnvironmentFieldNumber = 1,
  };
  // .MyModel.Response.Body.Head.Environment environment = 1;
  bool has_environment() const;
  private:
  bool _internal_has_environment() const;
  public:
  void clear_environment();
  const ::MyModel_Response_Body_Head_Environment& environment() const;
  ::MyModel_Response_Body_Head_Environment* release_environment();
  ::MyModel_Response_Body_Head_Environment* mutable_environment();
  void set_allocated_environment(::MyModel_Response_Body_Head_Environment* environment);
  private:
  const ::MyModel_Response_Body_Head_Environment& _internal_environment() const;
  ::MyModel_Response_Body_Head_Environment* _internal_mutable_environment();
  public:
  void unsafe_arena_set_allocated_environment(
      ::MyModel_Response_Body_Head_Environment* environment);
  ::MyModel_Response_Body_Head_Environment* unsafe_arena_release_environment();

  // @@protoc_insertion_point(class_scope:MyModel.Response.Body.Head)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::MyModel_Response_Body_Head_Environment* environment_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_2eproto;
};
// -------------------------------------------------------------------

class MyModel_Response_Body_Torso_Environment PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MyModel.Response.Body.Torso.Environment) */ {
 public:
  inline MyModel_Response_Body_Torso_Environment() : MyModel_Response_Body_Torso_Environment(nullptr) {}
  virtual ~MyModel_Response_Body_Torso_Environment();

  MyModel_Response_Body_Torso_Environment(const MyModel_Response_Body_Torso_Environment& from);
  MyModel_Response_Body_Torso_Environment(MyModel_Response_Body_Torso_Environment&& from) noexcept
    : MyModel_Response_Body_Torso_Environment() {
    *this = ::std::move(from);
  }

  inline MyModel_Response_Body_Torso_Environment& operator=(const MyModel_Response_Body_Torso_Environment& from) {
    CopyFrom(from);
    return *this;
  }
  inline MyModel_Response_Body_Torso_Environment& operator=(MyModel_Response_Body_Torso_Environment&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MyModel_Response_Body_Torso_Environment& default_instance();

  static inline const MyModel_Response_Body_Torso_Environment* internal_default_instance() {
    return reinterpret_cast<const MyModel_Response_Body_Torso_Environment*>(
               &_MyModel_Response_Body_Torso_Environment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MyModel_Response_Body_Torso_Environment& a, MyModel_Response_Body_Torso_Environment& b) {
    a.Swap(&b);
  }
  inline void Swap(MyModel_Response_Body_Torso_Environment* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MyModel_Response_Body_Torso_Environment* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MyModel_Response_Body_Torso_Environment* New() const final {
    return CreateMaybeMessage<MyModel_Response_Body_Torso_Environment>(nullptr);
  }

  MyModel_Response_Body_Torso_Environment* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MyModel_Response_Body_Torso_Environment>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MyModel_Response_Body_Torso_Environment& from);
  void MergeFrom(const MyModel_Response_Body_Torso_Environment& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MyModel_Response_Body_Torso_Environment* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MyModel.Response.Body.Torso.Environment";
  }
  protected:
  explicit MyModel_Response_Body_Torso_Environment(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_model_2eproto);
    return ::descriptor_table_model_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHashFieldNumber = 2,
    kTypeEnvFieldNumber = 3,
    kIdFieldNumber = 1,
    kTemperatureInCelsiusFieldNumber = 4,
    kHumidityInPercentFieldNumber = 5,
    kWindVelocityFieldNumber = 6,
  };
  // string hash = 2;
  void clear_hash();
  const std::string& hash() const;
  void set_hash(const std::string& value);
  void set_hash(std::string&& value);
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  std::string* mutable_hash();
  std::string* release_hash();
  void set_allocated_hash(std::string* hash);
  private:
  const std::string& _internal_hash() const;
  void _internal_set_hash(const std::string& value);
  std::string* _internal_mutable_hash();
  public:

  // string typeEnv = 3;
  void clear_typeenv();
  const std::string& typeenv() const;
  void set_typeenv(const std::string& value);
  void set_typeenv(std::string&& value);
  void set_typeenv(const char* value);
  void set_typeenv(const char* value, size_t size);
  std::string* mutable_typeenv();
  std::string* release_typeenv();
  void set_allocated_typeenv(std::string* typeenv);
  private:
  const std::string& _internal_typeenv() const;
  void _internal_set_typeenv(const std::string& value);
  std::string* _internal_mutable_typeenv();
  public:

  // int32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 temperatureInCelsius = 4;
  void clear_temperatureincelsius();
  ::PROTOBUF_NAMESPACE_ID::int32 temperatureincelsius() const;
  void set_temperatureincelsius(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_temperatureincelsius() const;
  void _internal_set_temperatureincelsius(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 humidityInPercent = 5;
  void clear_humidityinpercent();
  ::PROTOBUF_NAMESPACE_ID::int32 humidityinpercent() const;
  void set_humidityinpercent(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_humidityinpercent() const;
  void _internal_set_humidityinpercent(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 windVelocity = 6;
  void clear_windvelocity();
  ::PROTOBUF_NAMESPACE_ID::int32 windvelocity() const;
  void set_windvelocity(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_windvelocity() const;
  void _internal_set_windvelocity(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MyModel.Response.Body.Torso.Environment)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hash_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr typeenv_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 temperatureincelsius_;
  ::PROTOBUF_NAMESPACE_ID::int32 humidityinpercent_;
  ::PROTOBUF_NAMESPACE_ID::int32 windvelocity_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_2eproto;
};
// -------------------------------------------------------------------

class MyModel_Response_Body_Torso PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MyModel.Response.Body.Torso) */ {
 public:
  inline MyModel_Response_Body_Torso() : MyModel_Response_Body_Torso(nullptr) {}
  virtual ~MyModel_Response_Body_Torso();

  MyModel_Response_Body_Torso(const MyModel_Response_Body_Torso& from);
  MyModel_Response_Body_Torso(MyModel_Response_Body_Torso&& from) noexcept
    : MyModel_Response_Body_Torso() {
    *this = ::std::move(from);
  }

  inline MyModel_Response_Body_Torso& operator=(const MyModel_Response_Body_Torso& from) {
    CopyFrom(from);
    return *this;
  }
  inline MyModel_Response_Body_Torso& operator=(MyModel_Response_Body_Torso&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MyModel_Response_Body_Torso& default_instance();

  static inline const MyModel_Response_Body_Torso* internal_default_instance() {
    return reinterpret_cast<const MyModel_Response_Body_Torso*>(
               &_MyModel_Response_Body_Torso_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MyModel_Response_Body_Torso& a, MyModel_Response_Body_Torso& b) {
    a.Swap(&b);
  }
  inline void Swap(MyModel_Response_Body_Torso* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MyModel_Response_Body_Torso* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MyModel_Response_Body_Torso* New() const final {
    return CreateMaybeMessage<MyModel_Response_Body_Torso>(nullptr);
  }

  MyModel_Response_Body_Torso* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MyModel_Response_Body_Torso>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MyModel_Response_Body_Torso& from);
  void MergeFrom(const MyModel_Response_Body_Torso& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MyModel_Response_Body_Torso* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MyModel.Response.Body.Torso";
  }
  protected:
  explicit MyModel_Response_Body_Torso(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_model_2eproto);
    return ::descriptor_table_model_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef MyModel_Response_Body_Torso_Environment Environment;

  // accessors -------------------------------------------------------

  enum : int {
    kEnvironmentFieldNumber = 1,
  };
  // .MyModel.Response.Body.Torso.Environment environment = 1;
  bool has_environment() const;
  private:
  bool _internal_has_environment() const;
  public:
  void clear_environment();
  const ::MyModel_Response_Body_Torso_Environment& environment() const;
  ::MyModel_Response_Body_Torso_Environment* release_environment();
  ::MyModel_Response_Body_Torso_Environment* mutable_environment();
  void set_allocated_environment(::MyModel_Response_Body_Torso_Environment* environment);
  private:
  const ::MyModel_Response_Body_Torso_Environment& _internal_environment() const;
  ::MyModel_Response_Body_Torso_Environment* _internal_mutable_environment();
  public:
  void unsafe_arena_set_allocated_environment(
      ::MyModel_Response_Body_Torso_Environment* environment);
  ::MyModel_Response_Body_Torso_Environment* unsafe_arena_release_environment();

  // @@protoc_insertion_point(class_scope:MyModel.Response.Body.Torso)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::MyModel_Response_Body_Torso_Environment* environment_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_2eproto;
};
// -------------------------------------------------------------------

class MyModel_Response_Body_Clothing_Fabric PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MyModel.Response.Body.Clothing.Fabric) */ {
 public:
  inline MyModel_Response_Body_Clothing_Fabric() : MyModel_Response_Body_Clothing_Fabric(nullptr) {}
  virtual ~MyModel_Response_Body_Clothing_Fabric();

  MyModel_Response_Body_Clothing_Fabric(const MyModel_Response_Body_Clothing_Fabric& from);
  MyModel_Response_Body_Clothing_Fabric(MyModel_Response_Body_Clothing_Fabric&& from) noexcept
    : MyModel_Response_Body_Clothing_Fabric() {
    *this = ::std::move(from);
  }

  inline MyModel_Response_Body_Clothing_Fabric& operator=(const MyModel_Response_Body_Clothing_Fabric& from) {
    CopyFrom(from);
    return *this;
  }
  inline MyModel_Response_Body_Clothing_Fabric& operator=(MyModel_Response_Body_Clothing_Fabric&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MyModel_Response_Body_Clothing_Fabric& default_instance();

  static inline const MyModel_Response_Body_Clothing_Fabric* internal_default_instance() {
    return reinterpret_cast<const MyModel_Response_Body_Clothing_Fabric*>(
               &_MyModel_Response_Body_Clothing_Fabric_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MyModel_Response_Body_Clothing_Fabric& a, MyModel_Response_Body_Clothing_Fabric& b) {
    a.Swap(&b);
  }
  inline void Swap(MyModel_Response_Body_Clothing_Fabric* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MyModel_Response_Body_Clothing_Fabric* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MyModel_Response_Body_Clothing_Fabric* New() const final {
    return CreateMaybeMessage<MyModel_Response_Body_Clothing_Fabric>(nullptr);
  }

  MyModel_Response_Body_Clothing_Fabric* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MyModel_Response_Body_Clothing_Fabric>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MyModel_Response_Body_Clothing_Fabric& from);
  void MergeFrom(const MyModel_Response_Body_Clothing_Fabric& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MyModel_Response_Body_Clothing_Fabric* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MyModel.Response.Body.Clothing.Fabric";
  }
  protected:
  explicit MyModel_Response_Body_Clothing_Fabric(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_model_2eproto);
    return ::descriptor_table_model_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHashFieldNumber = 2,
    kRefFieldNumber = 3,
    kRfFieldNumber = 4,
    kIpFieldNumber = 5,
    kDensityFieldNumber = 6,
    kThicknessFieldNumber = 7,
    kIdFieldNumber = 1,
  };
  // string hash = 2;
  void clear_hash();
  const std::string& hash() const;
  void set_hash(const std::string& value);
  void set_hash(std::string&& value);
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  std::string* mutable_hash();
  std::string* release_hash();
  void set_allocated_hash(std::string* hash);
  private:
  const std::string& _internal_hash() const;
  void _internal_set_hash(const std::string& value);
  std::string* _internal_mutable_hash();
  public:

  // string ref = 3;
  void clear_ref();
  const std::string& ref() const;
  void set_ref(const std::string& value);
  void set_ref(std::string&& value);
  void set_ref(const char* value);
  void set_ref(const char* value, size_t size);
  std::string* mutable_ref();
  std::string* release_ref();
  void set_allocated_ref(std::string* ref);
  private:
  const std::string& _internal_ref() const;
  void _internal_set_ref(const std::string& value);
  std::string* _internal_mutable_ref();
  public:

  // string rf = 4;
  void clear_rf();
  const std::string& rf() const;
  void set_rf(const std::string& value);
  void set_rf(std::string&& value);
  void set_rf(const char* value);
  void set_rf(const char* value, size_t size);
  std::string* mutable_rf();
  std::string* release_rf();
  void set_allocated_rf(std::string* rf);
  private:
  const std::string& _internal_rf() const;
  void _internal_set_rf(const std::string& value);
  std::string* _internal_mutable_rf();
  public:

  // string ip = 5;
  void clear_ip();
  const std::string& ip() const;
  void set_ip(const std::string& value);
  void set_ip(std::string&& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  std::string* mutable_ip();
  std::string* release_ip();
  void set_allocated_ip(std::string* ip);
  private:
  const std::string& _internal_ip() const;
  void _internal_set_ip(const std::string& value);
  std::string* _internal_mutable_ip();
  public:

  // string density = 6;
  void clear_density();
  const std::string& density() const;
  void set_density(const std::string& value);
  void set_density(std::string&& value);
  void set_density(const char* value);
  void set_density(const char* value, size_t size);
  std::string* mutable_density();
  std::string* release_density();
  void set_allocated_density(std::string* density);
  private:
  const std::string& _internal_density() const;
  void _internal_set_density(const std::string& value);
  std::string* _internal_mutable_density();
  public:

  // string thickness = 7;
  void clear_thickness();
  const std::string& thickness() const;
  void set_thickness(const std::string& value);
  void set_thickness(std::string&& value);
  void set_thickness(const char* value);
  void set_thickness(const char* value, size_t size);
  std::string* mutable_thickness();
  std::string* release_thickness();
  void set_allocated_thickness(std::string* thickness);
  private:
  const std::string& _internal_thickness() const;
  void _internal_set_thickness(const std::string& value);
  std::string* _internal_mutable_thickness();
  public:

  // int32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MyModel.Response.Body.Clothing.Fabric)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hash_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ref_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rf_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr density_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thickness_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_2eproto;
};
// -------------------------------------------------------------------

class MyModel_Response_Body_Clothing PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MyModel.Response.Body.Clothing) */ {
 public:
  inline MyModel_Response_Body_Clothing() : MyModel_Response_Body_Clothing(nullptr) {}
  virtual ~MyModel_Response_Body_Clothing();

  MyModel_Response_Body_Clothing(const MyModel_Response_Body_Clothing& from);
  MyModel_Response_Body_Clothing(MyModel_Response_Body_Clothing&& from) noexcept
    : MyModel_Response_Body_Clothing() {
    *this = ::std::move(from);
  }

  inline MyModel_Response_Body_Clothing& operator=(const MyModel_Response_Body_Clothing& from) {
    CopyFrom(from);
    return *this;
  }
  inline MyModel_Response_Body_Clothing& operator=(MyModel_Response_Body_Clothing&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MyModel_Response_Body_Clothing& default_instance();

  static inline const MyModel_Response_Body_Clothing* internal_default_instance() {
    return reinterpret_cast<const MyModel_Response_Body_Clothing*>(
               &_MyModel_Response_Body_Clothing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MyModel_Response_Body_Clothing& a, MyModel_Response_Body_Clothing& b) {
    a.Swap(&b);
  }
  inline void Swap(MyModel_Response_Body_Clothing* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MyModel_Response_Body_Clothing* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MyModel_Response_Body_Clothing* New() const final {
    return CreateMaybeMessage<MyModel_Response_Body_Clothing>(nullptr);
  }

  MyModel_Response_Body_Clothing* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MyModel_Response_Body_Clothing>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MyModel_Response_Body_Clothing& from);
  void MergeFrom(const MyModel_Response_Body_Clothing& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MyModel_Response_Body_Clothing* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MyModel.Response.Body.Clothing";
  }
  protected:
  explicit MyModel_Response_Body_Clothing(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_model_2eproto);
    return ::descriptor_table_model_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef MyModel_Response_Body_Clothing_Fabric Fabric;

  // accessors -------------------------------------------------------

  enum : int {
    kHashFieldNumber = 2,
    kCoveringFieldNumber = 3,
    kFabricFieldNumber = 4,
    kIdFieldNumber = 1,
  };
  // string hash = 2;
  void clear_hash();
  const std::string& hash() const;
  void set_hash(const std::string& value);
  void set_hash(std::string&& value);
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  std::string* mutable_hash();
  std::string* release_hash();
  void set_allocated_hash(std::string* hash);
  private:
  const std::string& _internal_hash() const;
  void _internal_set_hash(const std::string& value);
  std::string* _internal_mutable_hash();
  public:

  // string covering = 3;
  void clear_covering();
  const std::string& covering() const;
  void set_covering(const std::string& value);
  void set_covering(std::string&& value);
  void set_covering(const char* value);
  void set_covering(const char* value, size_t size);
  std::string* mutable_covering();
  std::string* release_covering();
  void set_allocated_covering(std::string* covering);
  private:
  const std::string& _internal_covering() const;
  void _internal_set_covering(const std::string& value);
  std::string* _internal_mutable_covering();
  public:

  // .MyModel.Response.Body.Clothing.Fabric fabric = 4;
  bool has_fabric() const;
  private:
  bool _internal_has_fabric() const;
  public:
  void clear_fabric();
  const ::MyModel_Response_Body_Clothing_Fabric& fabric() const;
  ::MyModel_Response_Body_Clothing_Fabric* release_fabric();
  ::MyModel_Response_Body_Clothing_Fabric* mutable_fabric();
  void set_allocated_fabric(::MyModel_Response_Body_Clothing_Fabric* fabric);
  private:
  const ::MyModel_Response_Body_Clothing_Fabric& _internal_fabric() const;
  ::MyModel_Response_Body_Clothing_Fabric* _internal_mutable_fabric();
  public:
  void unsafe_arena_set_allocated_fabric(
      ::MyModel_Response_Body_Clothing_Fabric* fabric);
  ::MyModel_Response_Body_Clothing_Fabric* unsafe_arena_release_fabric();

  // int32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MyModel.Response.Body.Clothing)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hash_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr covering_;
  ::MyModel_Response_Body_Clothing_Fabric* fabric_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_2eproto;
};
// -------------------------------------------------------------------

class MyModel_Response_Body PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MyModel.Response.Body) */ {
 public:
  inline MyModel_Response_Body() : MyModel_Response_Body(nullptr) {}
  virtual ~MyModel_Response_Body();

  MyModel_Response_Body(const MyModel_Response_Body& from);
  MyModel_Response_Body(MyModel_Response_Body&& from) noexcept
    : MyModel_Response_Body() {
    *this = ::std::move(from);
  }

  inline MyModel_Response_Body& operator=(const MyModel_Response_Body& from) {
    CopyFrom(from);
    return *this;
  }
  inline MyModel_Response_Body& operator=(MyModel_Response_Body&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MyModel_Response_Body& default_instance();

  static inline const MyModel_Response_Body* internal_default_instance() {
    return reinterpret_cast<const MyModel_Response_Body*>(
               &_MyModel_Response_Body_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MyModel_Response_Body& a, MyModel_Response_Body& b) {
    a.Swap(&b);
  }
  inline void Swap(MyModel_Response_Body* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MyModel_Response_Body* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MyModel_Response_Body* New() const final {
    return CreateMaybeMessage<MyModel_Response_Body>(nullptr);
  }

  MyModel_Response_Body* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MyModel_Response_Body>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MyModel_Response_Body& from);
  void MergeFrom(const MyModel_Response_Body& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MyModel_Response_Body* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MyModel.Response.Body";
  }
  protected:
  explicit MyModel_Response_Body(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_model_2eproto);
    return ::descriptor_table_model_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef MyModel_Response_Body_Head Head;
  typedef MyModel_Response_Body_Torso Torso;
  typedef MyModel_Response_Body_Clothing Clothing;

  // accessors -------------------------------------------------------

  enum : int {
    kHashFieldNumber = 2,
    kHeadFieldNumber = 3,
    kTorsoFieldNumber = 4,
    kClothingFieldNumber = 5,
    kIdFieldNumber = 1,
  };
  // string hash = 2;
  void clear_hash();
  const std::string& hash() const;
  void set_hash(const std::string& value);
  void set_hash(std::string&& value);
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  std::string* mutable_hash();
  std::string* release_hash();
  void set_allocated_hash(std::string* hash);
  private:
  const std::string& _internal_hash() const;
  void _internal_set_hash(const std::string& value);
  std::string* _internal_mutable_hash();
  public:

  // .MyModel.Response.Body.Head head = 3;
  bool has_head() const;
  private:
  bool _internal_has_head() const;
  public:
  void clear_head();
  const ::MyModel_Response_Body_Head& head() const;
  ::MyModel_Response_Body_Head* release_head();
  ::MyModel_Response_Body_Head* mutable_head();
  void set_allocated_head(::MyModel_Response_Body_Head* head);
  private:
  const ::MyModel_Response_Body_Head& _internal_head() const;
  ::MyModel_Response_Body_Head* _internal_mutable_head();
  public:
  void unsafe_arena_set_allocated_head(
      ::MyModel_Response_Body_Head* head);
  ::MyModel_Response_Body_Head* unsafe_arena_release_head();

  // .MyModel.Response.Body.Torso torso = 4;
  bool has_torso() const;
  private:
  bool _internal_has_torso() const;
  public:
  void clear_torso();
  const ::MyModel_Response_Body_Torso& torso() const;
  ::MyModel_Response_Body_Torso* release_torso();
  ::MyModel_Response_Body_Torso* mutable_torso();
  void set_allocated_torso(::MyModel_Response_Body_Torso* torso);
  private:
  const ::MyModel_Response_Body_Torso& _internal_torso() const;
  ::MyModel_Response_Body_Torso* _internal_mutable_torso();
  public:
  void unsafe_arena_set_allocated_torso(
      ::MyModel_Response_Body_Torso* torso);
  ::MyModel_Response_Body_Torso* unsafe_arena_release_torso();

  // .MyModel.Response.Body.Clothing clothing = 5;
  bool has_clothing() const;
  private:
  bool _internal_has_clothing() const;
  public:
  void clear_clothing();
  const ::MyModel_Response_Body_Clothing& clothing() const;
  ::MyModel_Response_Body_Clothing* release_clothing();
  ::MyModel_Response_Body_Clothing* mutable_clothing();
  void set_allocated_clothing(::MyModel_Response_Body_Clothing* clothing);
  private:
  const ::MyModel_Response_Body_Clothing& _internal_clothing() const;
  ::MyModel_Response_Body_Clothing* _internal_mutable_clothing();
  public:
  void unsafe_arena_set_allocated_clothing(
      ::MyModel_Response_Body_Clothing* clothing);
  ::MyModel_Response_Body_Clothing* unsafe_arena_release_clothing();

  // int32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MyModel.Response.Body)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hash_;
  ::MyModel_Response_Body_Head* head_;
  ::MyModel_Response_Body_Torso* torso_;
  ::MyModel_Response_Body_Clothing* clothing_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_2eproto;
};
// -------------------------------------------------------------------

class MyModel_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MyModel.Response) */ {
 public:
  inline MyModel_Response() : MyModel_Response(nullptr) {}
  virtual ~MyModel_Response();

  MyModel_Response(const MyModel_Response& from);
  MyModel_Response(MyModel_Response&& from) noexcept
    : MyModel_Response() {
    *this = ::std::move(from);
  }

  inline MyModel_Response& operator=(const MyModel_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline MyModel_Response& operator=(MyModel_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MyModel_Response& default_instance();

  static inline const MyModel_Response* internal_default_instance() {
    return reinterpret_cast<const MyModel_Response*>(
               &_MyModel_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MyModel_Response& a, MyModel_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(MyModel_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MyModel_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MyModel_Response* New() const final {
    return CreateMaybeMessage<MyModel_Response>(nullptr);
  }

  MyModel_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MyModel_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MyModel_Response& from);
  void MergeFrom(const MyModel_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MyModel_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MyModel.Response";
  }
  protected:
  explicit MyModel_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_model_2eproto);
    return ::descriptor_table_model_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef MyModel_Response_Body Body;

  // accessors -------------------------------------------------------

  enum : int {
    kBodyFieldNumber = 1,
  };
  // .MyModel.Response.Body body = 1;
  bool has_body() const;
  private:
  bool _internal_has_body() const;
  public:
  void clear_body();
  const ::MyModel_Response_Body& body() const;
  ::MyModel_Response_Body* release_body();
  ::MyModel_Response_Body* mutable_body();
  void set_allocated_body(::MyModel_Response_Body* body);
  private:
  const ::MyModel_Response_Body& _internal_body() const;
  ::MyModel_Response_Body* _internal_mutable_body();
  public:
  void unsafe_arena_set_allocated_body(
      ::MyModel_Response_Body* body);
  ::MyModel_Response_Body* unsafe_arena_release_body();

  // @@protoc_insertion_point(class_scope:MyModel.Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::MyModel_Response_Body* body_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_2eproto;
};
// -------------------------------------------------------------------

class MyModel PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MyModel) */ {
 public:
  inline MyModel() : MyModel(nullptr) {}
  virtual ~MyModel();

  MyModel(const MyModel& from);
  MyModel(MyModel&& from) noexcept
    : MyModel() {
    *this = ::std::move(from);
  }

  inline MyModel& operator=(const MyModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline MyModel& operator=(MyModel&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MyModel& default_instance();

  static inline const MyModel* internal_default_instance() {
    return reinterpret_cast<const MyModel*>(
               &_MyModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MyModel& a, MyModel& b) {
    a.Swap(&b);
  }
  inline void Swap(MyModel* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MyModel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MyModel* New() const final {
    return CreateMaybeMessage<MyModel>(nullptr);
  }

  MyModel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MyModel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MyModel& from);
  void MergeFrom(const MyModel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MyModel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MyModel";
  }
  protected:
  explicit MyModel(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_model_2eproto);
    return ::descriptor_table_model_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef MyModel_Response Response;

  // accessors -------------------------------------------------------

  enum : int {
    kResponseFieldNumber = 1,
  };
  // .MyModel.Response response = 1;
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  const ::MyModel_Response& response() const;
  ::MyModel_Response* release_response();
  ::MyModel_Response* mutable_response();
  void set_allocated_response(::MyModel_Response* response);
  private:
  const ::MyModel_Response& _internal_response() const;
  ::MyModel_Response* _internal_mutable_response();
  public:
  void unsafe_arena_set_allocated_response(
      ::MyModel_Response* response);
  ::MyModel_Response* unsafe_arena_release_response();

  // @@protoc_insertion_point(class_scope:MyModel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::MyModel_Response* response_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_model_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MyModel_Response_Body_Head_Environment

// int32 id = 1;
inline void MyModel_Response_Body_Head_Environment::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body_Head_Environment::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body_Head_Environment::id() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Head.Environment.id)
  return _internal_id();
}
inline void MyModel_Response_Body_Head_Environment::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void MyModel_Response_Body_Head_Environment::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Head.Environment.id)
}

// string hash = 2;
inline void MyModel_Response_Body_Head_Environment::clear_hash() {
  hash_.ClearToEmpty();
}
inline const std::string& MyModel_Response_Body_Head_Environment::hash() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Head.Environment.hash)
  return _internal_hash();
}
inline void MyModel_Response_Body_Head_Environment::set_hash(const std::string& value) {
  _internal_set_hash(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Head.Environment.hash)
}
inline std::string* MyModel_Response_Body_Head_Environment::mutable_hash() {
  // @@protoc_insertion_point(field_mutable:MyModel.Response.Body.Head.Environment.hash)
  return _internal_mutable_hash();
}
inline const std::string& MyModel_Response_Body_Head_Environment::_internal_hash() const {
  return hash_.Get();
}
inline void MyModel_Response_Body_Head_Environment::_internal_set_hash(const std::string& value) {
  
  hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MyModel_Response_Body_Head_Environment::set_hash(std::string&& value) {
  
  hash_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MyModel.Response.Body.Head.Environment.hash)
}
inline void MyModel_Response_Body_Head_Environment::set_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MyModel.Response.Body.Head.Environment.hash)
}
inline void MyModel_Response_Body_Head_Environment::set_hash(const char* value,
    size_t size) {
  
  hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MyModel.Response.Body.Head.Environment.hash)
}
inline std::string* MyModel_Response_Body_Head_Environment::_internal_mutable_hash() {
  
  return hash_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MyModel_Response_Body_Head_Environment::release_hash() {
  // @@protoc_insertion_point(field_release:MyModel.Response.Body.Head.Environment.hash)
  return hash_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MyModel_Response_Body_Head_Environment::set_allocated_hash(std::string* hash) {
  if (hash != nullptr) {
    
  } else {
    
  }
  hash_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hash,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MyModel.Response.Body.Head.Environment.hash)
}

// string typeEnv = 3;
inline void MyModel_Response_Body_Head_Environment::clear_typeenv() {
  typeenv_.ClearToEmpty();
}
inline const std::string& MyModel_Response_Body_Head_Environment::typeenv() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Head.Environment.typeEnv)
  return _internal_typeenv();
}
inline void MyModel_Response_Body_Head_Environment::set_typeenv(const std::string& value) {
  _internal_set_typeenv(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Head.Environment.typeEnv)
}
inline std::string* MyModel_Response_Body_Head_Environment::mutable_typeenv() {
  // @@protoc_insertion_point(field_mutable:MyModel.Response.Body.Head.Environment.typeEnv)
  return _internal_mutable_typeenv();
}
inline const std::string& MyModel_Response_Body_Head_Environment::_internal_typeenv() const {
  return typeenv_.Get();
}
inline void MyModel_Response_Body_Head_Environment::_internal_set_typeenv(const std::string& value) {
  
  typeenv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MyModel_Response_Body_Head_Environment::set_typeenv(std::string&& value) {
  
  typeenv_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MyModel.Response.Body.Head.Environment.typeEnv)
}
inline void MyModel_Response_Body_Head_Environment::set_typeenv(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  typeenv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MyModel.Response.Body.Head.Environment.typeEnv)
}
inline void MyModel_Response_Body_Head_Environment::set_typeenv(const char* value,
    size_t size) {
  
  typeenv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MyModel.Response.Body.Head.Environment.typeEnv)
}
inline std::string* MyModel_Response_Body_Head_Environment::_internal_mutable_typeenv() {
  
  return typeenv_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MyModel_Response_Body_Head_Environment::release_typeenv() {
  // @@protoc_insertion_point(field_release:MyModel.Response.Body.Head.Environment.typeEnv)
  return typeenv_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MyModel_Response_Body_Head_Environment::set_allocated_typeenv(std::string* typeenv) {
  if (typeenv != nullptr) {
    
  } else {
    
  }
  typeenv_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), typeenv,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MyModel.Response.Body.Head.Environment.typeEnv)
}

// int32 temperatureInCelsius = 4;
inline void MyModel_Response_Body_Head_Environment::clear_temperatureincelsius() {
  temperatureincelsius_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body_Head_Environment::_internal_temperatureincelsius() const {
  return temperatureincelsius_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body_Head_Environment::temperatureincelsius() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Head.Environment.temperatureInCelsius)
  return _internal_temperatureincelsius();
}
inline void MyModel_Response_Body_Head_Environment::_internal_set_temperatureincelsius(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  temperatureincelsius_ = value;
}
inline void MyModel_Response_Body_Head_Environment::set_temperatureincelsius(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_temperatureincelsius(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Head.Environment.temperatureInCelsius)
}

// int32 humidityInPercent = 5;
inline void MyModel_Response_Body_Head_Environment::clear_humidityinpercent() {
  humidityinpercent_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body_Head_Environment::_internal_humidityinpercent() const {
  return humidityinpercent_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body_Head_Environment::humidityinpercent() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Head.Environment.humidityInPercent)
  return _internal_humidityinpercent();
}
inline void MyModel_Response_Body_Head_Environment::_internal_set_humidityinpercent(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  humidityinpercent_ = value;
}
inline void MyModel_Response_Body_Head_Environment::set_humidityinpercent(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_humidityinpercent(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Head.Environment.humidityInPercent)
}

// int32 windVelocity = 6;
inline void MyModel_Response_Body_Head_Environment::clear_windvelocity() {
  windvelocity_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body_Head_Environment::_internal_windvelocity() const {
  return windvelocity_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body_Head_Environment::windvelocity() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Head.Environment.windVelocity)
  return _internal_windvelocity();
}
inline void MyModel_Response_Body_Head_Environment::_internal_set_windvelocity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  windvelocity_ = value;
}
inline void MyModel_Response_Body_Head_Environment::set_windvelocity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_windvelocity(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Head.Environment.windVelocity)
}

// -------------------------------------------------------------------

// MyModel_Response_Body_Head

// .MyModel.Response.Body.Head.Environment environment = 1;
inline bool MyModel_Response_Body_Head::_internal_has_environment() const {
  return this != internal_default_instance() && environment_ != nullptr;
}
inline bool MyModel_Response_Body_Head::has_environment() const {
  return _internal_has_environment();
}
inline void MyModel_Response_Body_Head::clear_environment() {
  if (GetArena() == nullptr && environment_ != nullptr) {
    delete environment_;
  }
  environment_ = nullptr;
}
inline const ::MyModel_Response_Body_Head_Environment& MyModel_Response_Body_Head::_internal_environment() const {
  const ::MyModel_Response_Body_Head_Environment* p = environment_;
  return p != nullptr ? *p : reinterpret_cast<const ::MyModel_Response_Body_Head_Environment&>(
      ::_MyModel_Response_Body_Head_Environment_default_instance_);
}
inline const ::MyModel_Response_Body_Head_Environment& MyModel_Response_Body_Head::environment() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Head.environment)
  return _internal_environment();
}
inline void MyModel_Response_Body_Head::unsafe_arena_set_allocated_environment(
    ::MyModel_Response_Body_Head_Environment* environment) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(environment_);
  }
  environment_ = environment;
  if (environment) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MyModel.Response.Body.Head.environment)
}
inline ::MyModel_Response_Body_Head_Environment* MyModel_Response_Body_Head::release_environment() {
  
  ::MyModel_Response_Body_Head_Environment* temp = environment_;
  environment_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::MyModel_Response_Body_Head_Environment* MyModel_Response_Body_Head::unsafe_arena_release_environment() {
  // @@protoc_insertion_point(field_release:MyModel.Response.Body.Head.environment)
  
  ::MyModel_Response_Body_Head_Environment* temp = environment_;
  environment_ = nullptr;
  return temp;
}
inline ::MyModel_Response_Body_Head_Environment* MyModel_Response_Body_Head::_internal_mutable_environment() {
  
  if (environment_ == nullptr) {
    auto* p = CreateMaybeMessage<::MyModel_Response_Body_Head_Environment>(GetArena());
    environment_ = p;
  }
  return environment_;
}
inline ::MyModel_Response_Body_Head_Environment* MyModel_Response_Body_Head::mutable_environment() {
  // @@protoc_insertion_point(field_mutable:MyModel.Response.Body.Head.environment)
  return _internal_mutable_environment();
}
inline void MyModel_Response_Body_Head::set_allocated_environment(::MyModel_Response_Body_Head_Environment* environment) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete environment_;
  }
  if (environment) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(environment);
    if (message_arena != submessage_arena) {
      environment = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, environment, submessage_arena);
    }
    
  } else {
    
  }
  environment_ = environment;
  // @@protoc_insertion_point(field_set_allocated:MyModel.Response.Body.Head.environment)
}

// -------------------------------------------------------------------

// MyModel_Response_Body_Torso_Environment

// int32 id = 1;
inline void MyModel_Response_Body_Torso_Environment::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body_Torso_Environment::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body_Torso_Environment::id() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Torso.Environment.id)
  return _internal_id();
}
inline void MyModel_Response_Body_Torso_Environment::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void MyModel_Response_Body_Torso_Environment::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Torso.Environment.id)
}

// string hash = 2;
inline void MyModel_Response_Body_Torso_Environment::clear_hash() {
  hash_.ClearToEmpty();
}
inline const std::string& MyModel_Response_Body_Torso_Environment::hash() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Torso.Environment.hash)
  return _internal_hash();
}
inline void MyModel_Response_Body_Torso_Environment::set_hash(const std::string& value) {
  _internal_set_hash(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Torso.Environment.hash)
}
inline std::string* MyModel_Response_Body_Torso_Environment::mutable_hash() {
  // @@protoc_insertion_point(field_mutable:MyModel.Response.Body.Torso.Environment.hash)
  return _internal_mutable_hash();
}
inline const std::string& MyModel_Response_Body_Torso_Environment::_internal_hash() const {
  return hash_.Get();
}
inline void MyModel_Response_Body_Torso_Environment::_internal_set_hash(const std::string& value) {
  
  hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MyModel_Response_Body_Torso_Environment::set_hash(std::string&& value) {
  
  hash_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MyModel.Response.Body.Torso.Environment.hash)
}
inline void MyModel_Response_Body_Torso_Environment::set_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MyModel.Response.Body.Torso.Environment.hash)
}
inline void MyModel_Response_Body_Torso_Environment::set_hash(const char* value,
    size_t size) {
  
  hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MyModel.Response.Body.Torso.Environment.hash)
}
inline std::string* MyModel_Response_Body_Torso_Environment::_internal_mutable_hash() {
  
  return hash_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MyModel_Response_Body_Torso_Environment::release_hash() {
  // @@protoc_insertion_point(field_release:MyModel.Response.Body.Torso.Environment.hash)
  return hash_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MyModel_Response_Body_Torso_Environment::set_allocated_hash(std::string* hash) {
  if (hash != nullptr) {
    
  } else {
    
  }
  hash_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hash,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MyModel.Response.Body.Torso.Environment.hash)
}

// string typeEnv = 3;
inline void MyModel_Response_Body_Torso_Environment::clear_typeenv() {
  typeenv_.ClearToEmpty();
}
inline const std::string& MyModel_Response_Body_Torso_Environment::typeenv() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Torso.Environment.typeEnv)
  return _internal_typeenv();
}
inline void MyModel_Response_Body_Torso_Environment::set_typeenv(const std::string& value) {
  _internal_set_typeenv(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Torso.Environment.typeEnv)
}
inline std::string* MyModel_Response_Body_Torso_Environment::mutable_typeenv() {
  // @@protoc_insertion_point(field_mutable:MyModel.Response.Body.Torso.Environment.typeEnv)
  return _internal_mutable_typeenv();
}
inline const std::string& MyModel_Response_Body_Torso_Environment::_internal_typeenv() const {
  return typeenv_.Get();
}
inline void MyModel_Response_Body_Torso_Environment::_internal_set_typeenv(const std::string& value) {
  
  typeenv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MyModel_Response_Body_Torso_Environment::set_typeenv(std::string&& value) {
  
  typeenv_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MyModel.Response.Body.Torso.Environment.typeEnv)
}
inline void MyModel_Response_Body_Torso_Environment::set_typeenv(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  typeenv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MyModel.Response.Body.Torso.Environment.typeEnv)
}
inline void MyModel_Response_Body_Torso_Environment::set_typeenv(const char* value,
    size_t size) {
  
  typeenv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MyModel.Response.Body.Torso.Environment.typeEnv)
}
inline std::string* MyModel_Response_Body_Torso_Environment::_internal_mutable_typeenv() {
  
  return typeenv_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MyModel_Response_Body_Torso_Environment::release_typeenv() {
  // @@protoc_insertion_point(field_release:MyModel.Response.Body.Torso.Environment.typeEnv)
  return typeenv_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MyModel_Response_Body_Torso_Environment::set_allocated_typeenv(std::string* typeenv) {
  if (typeenv != nullptr) {
    
  } else {
    
  }
  typeenv_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), typeenv,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MyModel.Response.Body.Torso.Environment.typeEnv)
}

// int32 temperatureInCelsius = 4;
inline void MyModel_Response_Body_Torso_Environment::clear_temperatureincelsius() {
  temperatureincelsius_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body_Torso_Environment::_internal_temperatureincelsius() const {
  return temperatureincelsius_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body_Torso_Environment::temperatureincelsius() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Torso.Environment.temperatureInCelsius)
  return _internal_temperatureincelsius();
}
inline void MyModel_Response_Body_Torso_Environment::_internal_set_temperatureincelsius(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  temperatureincelsius_ = value;
}
inline void MyModel_Response_Body_Torso_Environment::set_temperatureincelsius(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_temperatureincelsius(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Torso.Environment.temperatureInCelsius)
}

// int32 humidityInPercent = 5;
inline void MyModel_Response_Body_Torso_Environment::clear_humidityinpercent() {
  humidityinpercent_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body_Torso_Environment::_internal_humidityinpercent() const {
  return humidityinpercent_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body_Torso_Environment::humidityinpercent() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Torso.Environment.humidityInPercent)
  return _internal_humidityinpercent();
}
inline void MyModel_Response_Body_Torso_Environment::_internal_set_humidityinpercent(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  humidityinpercent_ = value;
}
inline void MyModel_Response_Body_Torso_Environment::set_humidityinpercent(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_humidityinpercent(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Torso.Environment.humidityInPercent)
}

// int32 windVelocity = 6;
inline void MyModel_Response_Body_Torso_Environment::clear_windvelocity() {
  windvelocity_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body_Torso_Environment::_internal_windvelocity() const {
  return windvelocity_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body_Torso_Environment::windvelocity() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Torso.Environment.windVelocity)
  return _internal_windvelocity();
}
inline void MyModel_Response_Body_Torso_Environment::_internal_set_windvelocity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  windvelocity_ = value;
}
inline void MyModel_Response_Body_Torso_Environment::set_windvelocity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_windvelocity(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Torso.Environment.windVelocity)
}

// -------------------------------------------------------------------

// MyModel_Response_Body_Torso

// .MyModel.Response.Body.Torso.Environment environment = 1;
inline bool MyModel_Response_Body_Torso::_internal_has_environment() const {
  return this != internal_default_instance() && environment_ != nullptr;
}
inline bool MyModel_Response_Body_Torso::has_environment() const {
  return _internal_has_environment();
}
inline void MyModel_Response_Body_Torso::clear_environment() {
  if (GetArena() == nullptr && environment_ != nullptr) {
    delete environment_;
  }
  environment_ = nullptr;
}
inline const ::MyModel_Response_Body_Torso_Environment& MyModel_Response_Body_Torso::_internal_environment() const {
  const ::MyModel_Response_Body_Torso_Environment* p = environment_;
  return p != nullptr ? *p : reinterpret_cast<const ::MyModel_Response_Body_Torso_Environment&>(
      ::_MyModel_Response_Body_Torso_Environment_default_instance_);
}
inline const ::MyModel_Response_Body_Torso_Environment& MyModel_Response_Body_Torso::environment() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Torso.environment)
  return _internal_environment();
}
inline void MyModel_Response_Body_Torso::unsafe_arena_set_allocated_environment(
    ::MyModel_Response_Body_Torso_Environment* environment) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(environment_);
  }
  environment_ = environment;
  if (environment) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MyModel.Response.Body.Torso.environment)
}
inline ::MyModel_Response_Body_Torso_Environment* MyModel_Response_Body_Torso::release_environment() {
  
  ::MyModel_Response_Body_Torso_Environment* temp = environment_;
  environment_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::MyModel_Response_Body_Torso_Environment* MyModel_Response_Body_Torso::unsafe_arena_release_environment() {
  // @@protoc_insertion_point(field_release:MyModel.Response.Body.Torso.environment)
  
  ::MyModel_Response_Body_Torso_Environment* temp = environment_;
  environment_ = nullptr;
  return temp;
}
inline ::MyModel_Response_Body_Torso_Environment* MyModel_Response_Body_Torso::_internal_mutable_environment() {
  
  if (environment_ == nullptr) {
    auto* p = CreateMaybeMessage<::MyModel_Response_Body_Torso_Environment>(GetArena());
    environment_ = p;
  }
  return environment_;
}
inline ::MyModel_Response_Body_Torso_Environment* MyModel_Response_Body_Torso::mutable_environment() {
  // @@protoc_insertion_point(field_mutable:MyModel.Response.Body.Torso.environment)
  return _internal_mutable_environment();
}
inline void MyModel_Response_Body_Torso::set_allocated_environment(::MyModel_Response_Body_Torso_Environment* environment) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete environment_;
  }
  if (environment) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(environment);
    if (message_arena != submessage_arena) {
      environment = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, environment, submessage_arena);
    }
    
  } else {
    
  }
  environment_ = environment;
  // @@protoc_insertion_point(field_set_allocated:MyModel.Response.Body.Torso.environment)
}

// -------------------------------------------------------------------

// MyModel_Response_Body_Clothing_Fabric

// int32 id = 1;
inline void MyModel_Response_Body_Clothing_Fabric::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body_Clothing_Fabric::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body_Clothing_Fabric::id() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Clothing.Fabric.id)
  return _internal_id();
}
inline void MyModel_Response_Body_Clothing_Fabric::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void MyModel_Response_Body_Clothing_Fabric::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Clothing.Fabric.id)
}

// string hash = 2;
inline void MyModel_Response_Body_Clothing_Fabric::clear_hash() {
  hash_.ClearToEmpty();
}
inline const std::string& MyModel_Response_Body_Clothing_Fabric::hash() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Clothing.Fabric.hash)
  return _internal_hash();
}
inline void MyModel_Response_Body_Clothing_Fabric::set_hash(const std::string& value) {
  _internal_set_hash(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Clothing.Fabric.hash)
}
inline std::string* MyModel_Response_Body_Clothing_Fabric::mutable_hash() {
  // @@protoc_insertion_point(field_mutable:MyModel.Response.Body.Clothing.Fabric.hash)
  return _internal_mutable_hash();
}
inline const std::string& MyModel_Response_Body_Clothing_Fabric::_internal_hash() const {
  return hash_.Get();
}
inline void MyModel_Response_Body_Clothing_Fabric::_internal_set_hash(const std::string& value) {
  
  hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MyModel_Response_Body_Clothing_Fabric::set_hash(std::string&& value) {
  
  hash_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MyModel.Response.Body.Clothing.Fabric.hash)
}
inline void MyModel_Response_Body_Clothing_Fabric::set_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MyModel.Response.Body.Clothing.Fabric.hash)
}
inline void MyModel_Response_Body_Clothing_Fabric::set_hash(const char* value,
    size_t size) {
  
  hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MyModel.Response.Body.Clothing.Fabric.hash)
}
inline std::string* MyModel_Response_Body_Clothing_Fabric::_internal_mutable_hash() {
  
  return hash_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MyModel_Response_Body_Clothing_Fabric::release_hash() {
  // @@protoc_insertion_point(field_release:MyModel.Response.Body.Clothing.Fabric.hash)
  return hash_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MyModel_Response_Body_Clothing_Fabric::set_allocated_hash(std::string* hash) {
  if (hash != nullptr) {
    
  } else {
    
  }
  hash_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hash,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MyModel.Response.Body.Clothing.Fabric.hash)
}

// string ref = 3;
inline void MyModel_Response_Body_Clothing_Fabric::clear_ref() {
  ref_.ClearToEmpty();
}
inline const std::string& MyModel_Response_Body_Clothing_Fabric::ref() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Clothing.Fabric.ref)
  return _internal_ref();
}
inline void MyModel_Response_Body_Clothing_Fabric::set_ref(const std::string& value) {
  _internal_set_ref(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Clothing.Fabric.ref)
}
inline std::string* MyModel_Response_Body_Clothing_Fabric::mutable_ref() {
  // @@protoc_insertion_point(field_mutable:MyModel.Response.Body.Clothing.Fabric.ref)
  return _internal_mutable_ref();
}
inline const std::string& MyModel_Response_Body_Clothing_Fabric::_internal_ref() const {
  return ref_.Get();
}
inline void MyModel_Response_Body_Clothing_Fabric::_internal_set_ref(const std::string& value) {
  
  ref_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MyModel_Response_Body_Clothing_Fabric::set_ref(std::string&& value) {
  
  ref_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MyModel.Response.Body.Clothing.Fabric.ref)
}
inline void MyModel_Response_Body_Clothing_Fabric::set_ref(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ref_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MyModel.Response.Body.Clothing.Fabric.ref)
}
inline void MyModel_Response_Body_Clothing_Fabric::set_ref(const char* value,
    size_t size) {
  
  ref_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MyModel.Response.Body.Clothing.Fabric.ref)
}
inline std::string* MyModel_Response_Body_Clothing_Fabric::_internal_mutable_ref() {
  
  return ref_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MyModel_Response_Body_Clothing_Fabric::release_ref() {
  // @@protoc_insertion_point(field_release:MyModel.Response.Body.Clothing.Fabric.ref)
  return ref_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MyModel_Response_Body_Clothing_Fabric::set_allocated_ref(std::string* ref) {
  if (ref != nullptr) {
    
  } else {
    
  }
  ref_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ref,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MyModel.Response.Body.Clothing.Fabric.ref)
}

// string rf = 4;
inline void MyModel_Response_Body_Clothing_Fabric::clear_rf() {
  rf_.ClearToEmpty();
}
inline const std::string& MyModel_Response_Body_Clothing_Fabric::rf() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Clothing.Fabric.rf)
  return _internal_rf();
}
inline void MyModel_Response_Body_Clothing_Fabric::set_rf(const std::string& value) {
  _internal_set_rf(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Clothing.Fabric.rf)
}
inline std::string* MyModel_Response_Body_Clothing_Fabric::mutable_rf() {
  // @@protoc_insertion_point(field_mutable:MyModel.Response.Body.Clothing.Fabric.rf)
  return _internal_mutable_rf();
}
inline const std::string& MyModel_Response_Body_Clothing_Fabric::_internal_rf() const {
  return rf_.Get();
}
inline void MyModel_Response_Body_Clothing_Fabric::_internal_set_rf(const std::string& value) {
  
  rf_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MyModel_Response_Body_Clothing_Fabric::set_rf(std::string&& value) {
  
  rf_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MyModel.Response.Body.Clothing.Fabric.rf)
}
inline void MyModel_Response_Body_Clothing_Fabric::set_rf(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  rf_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MyModel.Response.Body.Clothing.Fabric.rf)
}
inline void MyModel_Response_Body_Clothing_Fabric::set_rf(const char* value,
    size_t size) {
  
  rf_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MyModel.Response.Body.Clothing.Fabric.rf)
}
inline std::string* MyModel_Response_Body_Clothing_Fabric::_internal_mutable_rf() {
  
  return rf_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MyModel_Response_Body_Clothing_Fabric::release_rf() {
  // @@protoc_insertion_point(field_release:MyModel.Response.Body.Clothing.Fabric.rf)
  return rf_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MyModel_Response_Body_Clothing_Fabric::set_allocated_rf(std::string* rf) {
  if (rf != nullptr) {
    
  } else {
    
  }
  rf_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rf,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MyModel.Response.Body.Clothing.Fabric.rf)
}

// string ip = 5;
inline void MyModel_Response_Body_Clothing_Fabric::clear_ip() {
  ip_.ClearToEmpty();
}
inline const std::string& MyModel_Response_Body_Clothing_Fabric::ip() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Clothing.Fabric.ip)
  return _internal_ip();
}
inline void MyModel_Response_Body_Clothing_Fabric::set_ip(const std::string& value) {
  _internal_set_ip(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Clothing.Fabric.ip)
}
inline std::string* MyModel_Response_Body_Clothing_Fabric::mutable_ip() {
  // @@protoc_insertion_point(field_mutable:MyModel.Response.Body.Clothing.Fabric.ip)
  return _internal_mutable_ip();
}
inline const std::string& MyModel_Response_Body_Clothing_Fabric::_internal_ip() const {
  return ip_.Get();
}
inline void MyModel_Response_Body_Clothing_Fabric::_internal_set_ip(const std::string& value) {
  
  ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MyModel_Response_Body_Clothing_Fabric::set_ip(std::string&& value) {
  
  ip_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MyModel.Response.Body.Clothing.Fabric.ip)
}
inline void MyModel_Response_Body_Clothing_Fabric::set_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MyModel.Response.Body.Clothing.Fabric.ip)
}
inline void MyModel_Response_Body_Clothing_Fabric::set_ip(const char* value,
    size_t size) {
  
  ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MyModel.Response.Body.Clothing.Fabric.ip)
}
inline std::string* MyModel_Response_Body_Clothing_Fabric::_internal_mutable_ip() {
  
  return ip_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MyModel_Response_Body_Clothing_Fabric::release_ip() {
  // @@protoc_insertion_point(field_release:MyModel.Response.Body.Clothing.Fabric.ip)
  return ip_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MyModel_Response_Body_Clothing_Fabric::set_allocated_ip(std::string* ip) {
  if (ip != nullptr) {
    
  } else {
    
  }
  ip_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ip,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MyModel.Response.Body.Clothing.Fabric.ip)
}

// string density = 6;
inline void MyModel_Response_Body_Clothing_Fabric::clear_density() {
  density_.ClearToEmpty();
}
inline const std::string& MyModel_Response_Body_Clothing_Fabric::density() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Clothing.Fabric.density)
  return _internal_density();
}
inline void MyModel_Response_Body_Clothing_Fabric::set_density(const std::string& value) {
  _internal_set_density(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Clothing.Fabric.density)
}
inline std::string* MyModel_Response_Body_Clothing_Fabric::mutable_density() {
  // @@protoc_insertion_point(field_mutable:MyModel.Response.Body.Clothing.Fabric.density)
  return _internal_mutable_density();
}
inline const std::string& MyModel_Response_Body_Clothing_Fabric::_internal_density() const {
  return density_.Get();
}
inline void MyModel_Response_Body_Clothing_Fabric::_internal_set_density(const std::string& value) {
  
  density_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MyModel_Response_Body_Clothing_Fabric::set_density(std::string&& value) {
  
  density_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MyModel.Response.Body.Clothing.Fabric.density)
}
inline void MyModel_Response_Body_Clothing_Fabric::set_density(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  density_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MyModel.Response.Body.Clothing.Fabric.density)
}
inline void MyModel_Response_Body_Clothing_Fabric::set_density(const char* value,
    size_t size) {
  
  density_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MyModel.Response.Body.Clothing.Fabric.density)
}
inline std::string* MyModel_Response_Body_Clothing_Fabric::_internal_mutable_density() {
  
  return density_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MyModel_Response_Body_Clothing_Fabric::release_density() {
  // @@protoc_insertion_point(field_release:MyModel.Response.Body.Clothing.Fabric.density)
  return density_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MyModel_Response_Body_Clothing_Fabric::set_allocated_density(std::string* density) {
  if (density != nullptr) {
    
  } else {
    
  }
  density_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), density,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MyModel.Response.Body.Clothing.Fabric.density)
}

// string thickness = 7;
inline void MyModel_Response_Body_Clothing_Fabric::clear_thickness() {
  thickness_.ClearToEmpty();
}
inline const std::string& MyModel_Response_Body_Clothing_Fabric::thickness() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Clothing.Fabric.thickness)
  return _internal_thickness();
}
inline void MyModel_Response_Body_Clothing_Fabric::set_thickness(const std::string& value) {
  _internal_set_thickness(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Clothing.Fabric.thickness)
}
inline std::string* MyModel_Response_Body_Clothing_Fabric::mutable_thickness() {
  // @@protoc_insertion_point(field_mutable:MyModel.Response.Body.Clothing.Fabric.thickness)
  return _internal_mutable_thickness();
}
inline const std::string& MyModel_Response_Body_Clothing_Fabric::_internal_thickness() const {
  return thickness_.Get();
}
inline void MyModel_Response_Body_Clothing_Fabric::_internal_set_thickness(const std::string& value) {
  
  thickness_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MyModel_Response_Body_Clothing_Fabric::set_thickness(std::string&& value) {
  
  thickness_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MyModel.Response.Body.Clothing.Fabric.thickness)
}
inline void MyModel_Response_Body_Clothing_Fabric::set_thickness(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  thickness_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MyModel.Response.Body.Clothing.Fabric.thickness)
}
inline void MyModel_Response_Body_Clothing_Fabric::set_thickness(const char* value,
    size_t size) {
  
  thickness_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MyModel.Response.Body.Clothing.Fabric.thickness)
}
inline std::string* MyModel_Response_Body_Clothing_Fabric::_internal_mutable_thickness() {
  
  return thickness_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MyModel_Response_Body_Clothing_Fabric::release_thickness() {
  // @@protoc_insertion_point(field_release:MyModel.Response.Body.Clothing.Fabric.thickness)
  return thickness_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MyModel_Response_Body_Clothing_Fabric::set_allocated_thickness(std::string* thickness) {
  if (thickness != nullptr) {
    
  } else {
    
  }
  thickness_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thickness,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MyModel.Response.Body.Clothing.Fabric.thickness)
}

// -------------------------------------------------------------------

// MyModel_Response_Body_Clothing

// int32 id = 1;
inline void MyModel_Response_Body_Clothing::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body_Clothing::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body_Clothing::id() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Clothing.id)
  return _internal_id();
}
inline void MyModel_Response_Body_Clothing::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void MyModel_Response_Body_Clothing::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Clothing.id)
}

// string hash = 2;
inline void MyModel_Response_Body_Clothing::clear_hash() {
  hash_.ClearToEmpty();
}
inline const std::string& MyModel_Response_Body_Clothing::hash() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Clothing.hash)
  return _internal_hash();
}
inline void MyModel_Response_Body_Clothing::set_hash(const std::string& value) {
  _internal_set_hash(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Clothing.hash)
}
inline std::string* MyModel_Response_Body_Clothing::mutable_hash() {
  // @@protoc_insertion_point(field_mutable:MyModel.Response.Body.Clothing.hash)
  return _internal_mutable_hash();
}
inline const std::string& MyModel_Response_Body_Clothing::_internal_hash() const {
  return hash_.Get();
}
inline void MyModel_Response_Body_Clothing::_internal_set_hash(const std::string& value) {
  
  hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MyModel_Response_Body_Clothing::set_hash(std::string&& value) {
  
  hash_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MyModel.Response.Body.Clothing.hash)
}
inline void MyModel_Response_Body_Clothing::set_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MyModel.Response.Body.Clothing.hash)
}
inline void MyModel_Response_Body_Clothing::set_hash(const char* value,
    size_t size) {
  
  hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MyModel.Response.Body.Clothing.hash)
}
inline std::string* MyModel_Response_Body_Clothing::_internal_mutable_hash() {
  
  return hash_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MyModel_Response_Body_Clothing::release_hash() {
  // @@protoc_insertion_point(field_release:MyModel.Response.Body.Clothing.hash)
  return hash_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MyModel_Response_Body_Clothing::set_allocated_hash(std::string* hash) {
  if (hash != nullptr) {
    
  } else {
    
  }
  hash_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hash,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MyModel.Response.Body.Clothing.hash)
}

// string covering = 3;
inline void MyModel_Response_Body_Clothing::clear_covering() {
  covering_.ClearToEmpty();
}
inline const std::string& MyModel_Response_Body_Clothing::covering() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Clothing.covering)
  return _internal_covering();
}
inline void MyModel_Response_Body_Clothing::set_covering(const std::string& value) {
  _internal_set_covering(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.Clothing.covering)
}
inline std::string* MyModel_Response_Body_Clothing::mutable_covering() {
  // @@protoc_insertion_point(field_mutable:MyModel.Response.Body.Clothing.covering)
  return _internal_mutable_covering();
}
inline const std::string& MyModel_Response_Body_Clothing::_internal_covering() const {
  return covering_.Get();
}
inline void MyModel_Response_Body_Clothing::_internal_set_covering(const std::string& value) {
  
  covering_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MyModel_Response_Body_Clothing::set_covering(std::string&& value) {
  
  covering_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MyModel.Response.Body.Clothing.covering)
}
inline void MyModel_Response_Body_Clothing::set_covering(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  covering_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MyModel.Response.Body.Clothing.covering)
}
inline void MyModel_Response_Body_Clothing::set_covering(const char* value,
    size_t size) {
  
  covering_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MyModel.Response.Body.Clothing.covering)
}
inline std::string* MyModel_Response_Body_Clothing::_internal_mutable_covering() {
  
  return covering_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MyModel_Response_Body_Clothing::release_covering() {
  // @@protoc_insertion_point(field_release:MyModel.Response.Body.Clothing.covering)
  return covering_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MyModel_Response_Body_Clothing::set_allocated_covering(std::string* covering) {
  if (covering != nullptr) {
    
  } else {
    
  }
  covering_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), covering,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MyModel.Response.Body.Clothing.covering)
}

// .MyModel.Response.Body.Clothing.Fabric fabric = 4;
inline bool MyModel_Response_Body_Clothing::_internal_has_fabric() const {
  return this != internal_default_instance() && fabric_ != nullptr;
}
inline bool MyModel_Response_Body_Clothing::has_fabric() const {
  return _internal_has_fabric();
}
inline void MyModel_Response_Body_Clothing::clear_fabric() {
  if (GetArena() == nullptr && fabric_ != nullptr) {
    delete fabric_;
  }
  fabric_ = nullptr;
}
inline const ::MyModel_Response_Body_Clothing_Fabric& MyModel_Response_Body_Clothing::_internal_fabric() const {
  const ::MyModel_Response_Body_Clothing_Fabric* p = fabric_;
  return p != nullptr ? *p : reinterpret_cast<const ::MyModel_Response_Body_Clothing_Fabric&>(
      ::_MyModel_Response_Body_Clothing_Fabric_default_instance_);
}
inline const ::MyModel_Response_Body_Clothing_Fabric& MyModel_Response_Body_Clothing::fabric() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.Clothing.fabric)
  return _internal_fabric();
}
inline void MyModel_Response_Body_Clothing::unsafe_arena_set_allocated_fabric(
    ::MyModel_Response_Body_Clothing_Fabric* fabric) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(fabric_);
  }
  fabric_ = fabric;
  if (fabric) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MyModel.Response.Body.Clothing.fabric)
}
inline ::MyModel_Response_Body_Clothing_Fabric* MyModel_Response_Body_Clothing::release_fabric() {
  
  ::MyModel_Response_Body_Clothing_Fabric* temp = fabric_;
  fabric_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::MyModel_Response_Body_Clothing_Fabric* MyModel_Response_Body_Clothing::unsafe_arena_release_fabric() {
  // @@protoc_insertion_point(field_release:MyModel.Response.Body.Clothing.fabric)
  
  ::MyModel_Response_Body_Clothing_Fabric* temp = fabric_;
  fabric_ = nullptr;
  return temp;
}
inline ::MyModel_Response_Body_Clothing_Fabric* MyModel_Response_Body_Clothing::_internal_mutable_fabric() {
  
  if (fabric_ == nullptr) {
    auto* p = CreateMaybeMessage<::MyModel_Response_Body_Clothing_Fabric>(GetArena());
    fabric_ = p;
  }
  return fabric_;
}
inline ::MyModel_Response_Body_Clothing_Fabric* MyModel_Response_Body_Clothing::mutable_fabric() {
  // @@protoc_insertion_point(field_mutable:MyModel.Response.Body.Clothing.fabric)
  return _internal_mutable_fabric();
}
inline void MyModel_Response_Body_Clothing::set_allocated_fabric(::MyModel_Response_Body_Clothing_Fabric* fabric) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete fabric_;
  }
  if (fabric) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(fabric);
    if (message_arena != submessage_arena) {
      fabric = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fabric, submessage_arena);
    }
    
  } else {
    
  }
  fabric_ = fabric;
  // @@protoc_insertion_point(field_set_allocated:MyModel.Response.Body.Clothing.fabric)
}

// -------------------------------------------------------------------

// MyModel_Response_Body

// int32 id = 1;
inline void MyModel_Response_Body::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MyModel_Response_Body::id() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.id)
  return _internal_id();
}
inline void MyModel_Response_Body::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void MyModel_Response_Body::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.id)
}

// string hash = 2;
inline void MyModel_Response_Body::clear_hash() {
  hash_.ClearToEmpty();
}
inline const std::string& MyModel_Response_Body::hash() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.hash)
  return _internal_hash();
}
inline void MyModel_Response_Body::set_hash(const std::string& value) {
  _internal_set_hash(value);
  // @@protoc_insertion_point(field_set:MyModel.Response.Body.hash)
}
inline std::string* MyModel_Response_Body::mutable_hash() {
  // @@protoc_insertion_point(field_mutable:MyModel.Response.Body.hash)
  return _internal_mutable_hash();
}
inline const std::string& MyModel_Response_Body::_internal_hash() const {
  return hash_.Get();
}
inline void MyModel_Response_Body::_internal_set_hash(const std::string& value) {
  
  hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MyModel_Response_Body::set_hash(std::string&& value) {
  
  hash_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MyModel.Response.Body.hash)
}
inline void MyModel_Response_Body::set_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MyModel.Response.Body.hash)
}
inline void MyModel_Response_Body::set_hash(const char* value,
    size_t size) {
  
  hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MyModel.Response.Body.hash)
}
inline std::string* MyModel_Response_Body::_internal_mutable_hash() {
  
  return hash_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MyModel_Response_Body::release_hash() {
  // @@protoc_insertion_point(field_release:MyModel.Response.Body.hash)
  return hash_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MyModel_Response_Body::set_allocated_hash(std::string* hash) {
  if (hash != nullptr) {
    
  } else {
    
  }
  hash_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hash,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MyModel.Response.Body.hash)
}

// .MyModel.Response.Body.Head head = 3;
inline bool MyModel_Response_Body::_internal_has_head() const {
  return this != internal_default_instance() && head_ != nullptr;
}
inline bool MyModel_Response_Body::has_head() const {
  return _internal_has_head();
}
inline void MyModel_Response_Body::clear_head() {
  if (GetArena() == nullptr && head_ != nullptr) {
    delete head_;
  }
  head_ = nullptr;
}
inline const ::MyModel_Response_Body_Head& MyModel_Response_Body::_internal_head() const {
  const ::MyModel_Response_Body_Head* p = head_;
  return p != nullptr ? *p : reinterpret_cast<const ::MyModel_Response_Body_Head&>(
      ::_MyModel_Response_Body_Head_default_instance_);
}
inline const ::MyModel_Response_Body_Head& MyModel_Response_Body::head() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.head)
  return _internal_head();
}
inline void MyModel_Response_Body::unsafe_arena_set_allocated_head(
    ::MyModel_Response_Body_Head* head) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(head_);
  }
  head_ = head;
  if (head) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MyModel.Response.Body.head)
}
inline ::MyModel_Response_Body_Head* MyModel_Response_Body::release_head() {
  
  ::MyModel_Response_Body_Head* temp = head_;
  head_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::MyModel_Response_Body_Head* MyModel_Response_Body::unsafe_arena_release_head() {
  // @@protoc_insertion_point(field_release:MyModel.Response.Body.head)
  
  ::MyModel_Response_Body_Head* temp = head_;
  head_ = nullptr;
  return temp;
}
inline ::MyModel_Response_Body_Head* MyModel_Response_Body::_internal_mutable_head() {
  
  if (head_ == nullptr) {
    auto* p = CreateMaybeMessage<::MyModel_Response_Body_Head>(GetArena());
    head_ = p;
  }
  return head_;
}
inline ::MyModel_Response_Body_Head* MyModel_Response_Body::mutable_head() {
  // @@protoc_insertion_point(field_mutable:MyModel.Response.Body.head)
  return _internal_mutable_head();
}
inline void MyModel_Response_Body::set_allocated_head(::MyModel_Response_Body_Head* head) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete head_;
  }
  if (head) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(head);
    if (message_arena != submessage_arena) {
      head = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, head, submessage_arena);
    }
    
  } else {
    
  }
  head_ = head;
  // @@protoc_insertion_point(field_set_allocated:MyModel.Response.Body.head)
}

// .MyModel.Response.Body.Torso torso = 4;
inline bool MyModel_Response_Body::_internal_has_torso() const {
  return this != internal_default_instance() && torso_ != nullptr;
}
inline bool MyModel_Response_Body::has_torso() const {
  return _internal_has_torso();
}
inline void MyModel_Response_Body::clear_torso() {
  if (GetArena() == nullptr && torso_ != nullptr) {
    delete torso_;
  }
  torso_ = nullptr;
}
inline const ::MyModel_Response_Body_Torso& MyModel_Response_Body::_internal_torso() const {
  const ::MyModel_Response_Body_Torso* p = torso_;
  return p != nullptr ? *p : reinterpret_cast<const ::MyModel_Response_Body_Torso&>(
      ::_MyModel_Response_Body_Torso_default_instance_);
}
inline const ::MyModel_Response_Body_Torso& MyModel_Response_Body::torso() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.torso)
  return _internal_torso();
}
inline void MyModel_Response_Body::unsafe_arena_set_allocated_torso(
    ::MyModel_Response_Body_Torso* torso) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(torso_);
  }
  torso_ = torso;
  if (torso) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MyModel.Response.Body.torso)
}
inline ::MyModel_Response_Body_Torso* MyModel_Response_Body::release_torso() {
  
  ::MyModel_Response_Body_Torso* temp = torso_;
  torso_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::MyModel_Response_Body_Torso* MyModel_Response_Body::unsafe_arena_release_torso() {
  // @@protoc_insertion_point(field_release:MyModel.Response.Body.torso)
  
  ::MyModel_Response_Body_Torso* temp = torso_;
  torso_ = nullptr;
  return temp;
}
inline ::MyModel_Response_Body_Torso* MyModel_Response_Body::_internal_mutable_torso() {
  
  if (torso_ == nullptr) {
    auto* p = CreateMaybeMessage<::MyModel_Response_Body_Torso>(GetArena());
    torso_ = p;
  }
  return torso_;
}
inline ::MyModel_Response_Body_Torso* MyModel_Response_Body::mutable_torso() {
  // @@protoc_insertion_point(field_mutable:MyModel.Response.Body.torso)
  return _internal_mutable_torso();
}
inline void MyModel_Response_Body::set_allocated_torso(::MyModel_Response_Body_Torso* torso) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete torso_;
  }
  if (torso) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(torso);
    if (message_arena != submessage_arena) {
      torso = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, torso, submessage_arena);
    }
    
  } else {
    
  }
  torso_ = torso;
  // @@protoc_insertion_point(field_set_allocated:MyModel.Response.Body.torso)
}

// .MyModel.Response.Body.Clothing clothing = 5;
inline bool MyModel_Response_Body::_internal_has_clothing() const {
  return this != internal_default_instance() && clothing_ != nullptr;
}
inline bool MyModel_Response_Body::has_clothing() const {
  return _internal_has_clothing();
}
inline void MyModel_Response_Body::clear_clothing() {
  if (GetArena() == nullptr && clothing_ != nullptr) {
    delete clothing_;
  }
  clothing_ = nullptr;
}
inline const ::MyModel_Response_Body_Clothing& MyModel_Response_Body::_internal_clothing() const {
  const ::MyModel_Response_Body_Clothing* p = clothing_;
  return p != nullptr ? *p : reinterpret_cast<const ::MyModel_Response_Body_Clothing&>(
      ::_MyModel_Response_Body_Clothing_default_instance_);
}
inline const ::MyModel_Response_Body_Clothing& MyModel_Response_Body::clothing() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.Body.clothing)
  return _internal_clothing();
}
inline void MyModel_Response_Body::unsafe_arena_set_allocated_clothing(
    ::MyModel_Response_Body_Clothing* clothing) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(clothing_);
  }
  clothing_ = clothing;
  if (clothing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MyModel.Response.Body.clothing)
}
inline ::MyModel_Response_Body_Clothing* MyModel_Response_Body::release_clothing() {
  
  ::MyModel_Response_Body_Clothing* temp = clothing_;
  clothing_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::MyModel_Response_Body_Clothing* MyModel_Response_Body::unsafe_arena_release_clothing() {
  // @@protoc_insertion_point(field_release:MyModel.Response.Body.clothing)
  
  ::MyModel_Response_Body_Clothing* temp = clothing_;
  clothing_ = nullptr;
  return temp;
}
inline ::MyModel_Response_Body_Clothing* MyModel_Response_Body::_internal_mutable_clothing() {
  
  if (clothing_ == nullptr) {
    auto* p = CreateMaybeMessage<::MyModel_Response_Body_Clothing>(GetArena());
    clothing_ = p;
  }
  return clothing_;
}
inline ::MyModel_Response_Body_Clothing* MyModel_Response_Body::mutable_clothing() {
  // @@protoc_insertion_point(field_mutable:MyModel.Response.Body.clothing)
  return _internal_mutable_clothing();
}
inline void MyModel_Response_Body::set_allocated_clothing(::MyModel_Response_Body_Clothing* clothing) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete clothing_;
  }
  if (clothing) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(clothing);
    if (message_arena != submessage_arena) {
      clothing = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, clothing, submessage_arena);
    }
    
  } else {
    
  }
  clothing_ = clothing;
  // @@protoc_insertion_point(field_set_allocated:MyModel.Response.Body.clothing)
}

// -------------------------------------------------------------------

// MyModel_Response

// .MyModel.Response.Body body = 1;
inline bool MyModel_Response::_internal_has_body() const {
  return this != internal_default_instance() && body_ != nullptr;
}
inline bool MyModel_Response::has_body() const {
  return _internal_has_body();
}
inline void MyModel_Response::clear_body() {
  if (GetArena() == nullptr && body_ != nullptr) {
    delete body_;
  }
  body_ = nullptr;
}
inline const ::MyModel_Response_Body& MyModel_Response::_internal_body() const {
  const ::MyModel_Response_Body* p = body_;
  return p != nullptr ? *p : reinterpret_cast<const ::MyModel_Response_Body&>(
      ::_MyModel_Response_Body_default_instance_);
}
inline const ::MyModel_Response_Body& MyModel_Response::body() const {
  // @@protoc_insertion_point(field_get:MyModel.Response.body)
  return _internal_body();
}
inline void MyModel_Response::unsafe_arena_set_allocated_body(
    ::MyModel_Response_Body* body) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(body_);
  }
  body_ = body;
  if (body) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MyModel.Response.body)
}
inline ::MyModel_Response_Body* MyModel_Response::release_body() {
  
  ::MyModel_Response_Body* temp = body_;
  body_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::MyModel_Response_Body* MyModel_Response::unsafe_arena_release_body() {
  // @@protoc_insertion_point(field_release:MyModel.Response.body)
  
  ::MyModel_Response_Body* temp = body_;
  body_ = nullptr;
  return temp;
}
inline ::MyModel_Response_Body* MyModel_Response::_internal_mutable_body() {
  
  if (body_ == nullptr) {
    auto* p = CreateMaybeMessage<::MyModel_Response_Body>(GetArena());
    body_ = p;
  }
  return body_;
}
inline ::MyModel_Response_Body* MyModel_Response::mutable_body() {
  // @@protoc_insertion_point(field_mutable:MyModel.Response.body)
  return _internal_mutable_body();
}
inline void MyModel_Response::set_allocated_body(::MyModel_Response_Body* body) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete body_;
  }
  if (body) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(body);
    if (message_arena != submessage_arena) {
      body = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, body, submessage_arena);
    }
    
  } else {
    
  }
  body_ = body;
  // @@protoc_insertion_point(field_set_allocated:MyModel.Response.body)
}

// -------------------------------------------------------------------

// MyModel

// .MyModel.Response response = 1;
inline bool MyModel::_internal_has_response() const {
  return this != internal_default_instance() && response_ != nullptr;
}
inline bool MyModel::has_response() const {
  return _internal_has_response();
}
inline void MyModel::clear_response() {
  if (GetArena() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
}
inline const ::MyModel_Response& MyModel::_internal_response() const {
  const ::MyModel_Response* p = response_;
  return p != nullptr ? *p : reinterpret_cast<const ::MyModel_Response&>(
      ::_MyModel_Response_default_instance_);
}
inline const ::MyModel_Response& MyModel::response() const {
  // @@protoc_insertion_point(field_get:MyModel.response)
  return _internal_response();
}
inline void MyModel::unsafe_arena_set_allocated_response(
    ::MyModel_Response* response) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(response_);
  }
  response_ = response;
  if (response) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MyModel.response)
}
inline ::MyModel_Response* MyModel::release_response() {
  
  ::MyModel_Response* temp = response_;
  response_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::MyModel_Response* MyModel::unsafe_arena_release_response() {
  // @@protoc_insertion_point(field_release:MyModel.response)
  
  ::MyModel_Response* temp = response_;
  response_ = nullptr;
  return temp;
}
inline ::MyModel_Response* MyModel::_internal_mutable_response() {
  
  if (response_ == nullptr) {
    auto* p = CreateMaybeMessage<::MyModel_Response>(GetArena());
    response_ = p;
  }
  return response_;
}
inline ::MyModel_Response* MyModel::mutable_response() {
  // @@protoc_insertion_point(field_mutable:MyModel.response)
  return _internal_mutable_response();
}
inline void MyModel::set_allocated_response(::MyModel_Response* response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete response_;
  }
  if (response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(response);
    if (message_arena != submessage_arena) {
      response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, response, submessage_arena);
    }
    
  } else {
    
  }
  response_ = response;
  // @@protoc_insertion_point(field_set_allocated:MyModel.response)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_model_2eproto
